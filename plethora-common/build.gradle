// For those who want the bleeding edge
plugins {
	id "com.github.ben-manes.versions" version "0.21.0" // Provides dependencyUpdates task.
}

apply plugin: 'net.minecraftforge.gradle'

archivesBaseName = "plethora-common"

minecraft {
	mappings channel: project.mappings_channel, version: project.mappings_version
	accessTransformer file('src/main/resources/META-INF/accesstransformer.cfg')
}

dependencies {
	minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"
	implementation fg.deobf("org.squiddev:cc-tweaked-${project.mc_version}:${project.cct_version}")

	compileOnly fg.deobf("mezz.jei:jei_${project.mc_version}:${project.jei_version}:api")

	// External mods with maven dependencies. Have fun when the next version of Minecraft drops!
	integrationMod("com.github.mcjty:mcjtylib:1.12-3.5.0") { transitive = false }
	integrationMod("com.github.mcjty:rftools:1.12-7.70") { transitive = false }
	integrationMod("com.github.mcjty:xnet:1.12-1.8.0") { transitive = false }
	integrationMod "li.cil.oc:OpenComputers:MC1.12.2-1.7.5.192"
	integrationMod "vazkii.botania:Botania:r1.10-362.77"

	// All the Curse mods
	integrationMod "baubles:Baubles:1.12:1.5.2"

	compileOnly('org.squiddev:ConfigGen:1.2.5') { exclude group: 'net.minecraftforge' }

	// compileOnly "org.squiddev:forgelint:0.1.1"
	compileOnly "com.google.errorprone:error_prone_annotations:2.0.21"
}

task processSources(type: Sync) {
	inputs.property 'mod_version', project.mod_version
	inputs.property 'mc_version', project.mc_version
	inputs.property 'cct_version', project.cct_version
	inputs.property 'forge_version', project.forge_version
	inputs.files sourceSets.main.java

	from(sourceSets.main.java.srcDirs) {
		include 'org/squiddev/plethora/core/PlethoraCore.java'
		include 'org/squiddev/plethora/gameplay/Plethora.java'

		filter { line -> line
				.replace('${mod_version}', project.mod_version)
				.replace('${mc_version}', project.mc_version)
				.replace('${cct_version}', project.cct_version)
				.replace('${forge_version}', project.forge_version)
		}
	}

	from(sourceSets.main.java.srcDirs) {
		exclude 'org/squiddev/plethora/core/PlethoraCore.java'
		exclude 'org/squiddev/plethora/gameplay/Plethora.java'
	}

	into "${project.buildDir}/src"
}

compileJava {
	source = processSources.outputs
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "mod_version", project.mod_version
	inputs.property "mc_version", project.mc_version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'mod_version': mod_version, 'mc_version': mc_version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

// Not quite ready for common usage, but helped a lot in checking stuff
// compileJava { options.compilerArgs << "-Xplugin:ForgeLint" }
